import unittest

class RunnerTest(unittest.TestCase):
    is_frozen = False

    def skip_if_frozen(test_method):
        def wrapper(self, *args, **kwargs):
            if getattr(self, 'is_frozen', False):
                self.skipTest('Тесты в этом кейсе заморожены')
            return test_method(self, *args, **kwargs)
        return wrapper

    @skip_if_frozen
    def test_challenge(self):
        self.assertTrue(True)

    @skip_if_frozen
    def test_run(self):
        self.assertTrue(True)

    @skip_if_frozen
    def test_walk(self):
        self.assertTrue(True)

class TournamentTest(unittest.TestCase):
    is_frozen = True

    def skip_if_frozen(test_method):
        def wrapper(self, *args, **kwargs):
            if getattr(self, 'is_frozen', False):
                self.skipTest('Тесты в этом кейсе заморожены')
            return test_method(self, *args, **kwargs)
        return wrapper

    @skip_if_frozen
    def test_first_tournament(self):
        self.assertTrue(True)

    @skip_if_frozen
    def test_second_tournament(self):
        self.assertTrue(True)

    @skip_if_frozen
    def test_third_tournament(self):
        self.assertTrue(True)
